spring:
      datasource:
        hikari:
          driverClassName: org.h2.Driver
          jdbcUrl: jdbc:h2:mem:test
          username: test
          password: test
      jpa:
          database: h2
          show_sql: ${SHOW_SQL:false}
          hibernate:
              ddl-auto: create
          properties:
              hibernate.cache.use_query_cache: false
              hibernate.current_session_context_class : org.springframework.orm.hibernate5.SpringSessionContext
              hibernate.dialect: org.hibernate.dialect.DB2Dialect
      redis:
          host: ${REDIS_HOST:192.168.99.100}
          password: ${REDIS_PASSWORD:}
          port: ${REDIS_PORT:6379}
      jackson:
          serialization.write_dates_as_timestamps: false

perry:
    doraWsMaxAttempts: ${DORA_WS_MAX_ATTEMPTS:3} #amount of retries
    doraWsRetryDelayMs: ${DORA_WS_RETRY_DELAY_MS:500}  #milliseconds
    identityManager:
          idmMapping: ${IDM_MAPPING_SCRIPT:config/idm.groovy}
          idmBasicAuthUser: ${IDM_BASIC_AUTH_USER:}
          idmBasicAuthPass: ${IDM_BASIC_AUTH_PASSWORD:}
    jwt:
      timeout: ${TOKEN_TIMEOUT:10} #minutes
      issuer: ${TOKEN_ISSUER:perry}
      encryptionEnabled: ${TOKEN_ENCRYPTION_ENABLED:true}
      encryptionMethod: ${TOKEN_ENCRYPTION_METHOD:A128GCM}
      headless: ${HEADLESS_JWT:true}
      keyStore:
        path: ${KEYSTORE_PATH:config/enc.jceks}
        alias: ${KEYSTORE_ALIAS:test}
        password: ${KEYSTORE_PASSWORD:test}
        keyPassword : ${KEYSTORE_KEY_PASSWORD:test}
        encAlias:  ${KEYSTORE_ENC_ALIAS:enc128}
        encKeyPassword: ${KEYSTORE_ENC_KEY_PASSWORD:test}
    tokenStore:
      datasource:
        driver-class-name: org.postgresql.Driver
        url: ${TOKEN_STORE_JDBC_URL:jdbc:postgresql://postgres.preint02.cwds.io:5432/postgres}
        username: ${TOKEN_STORE_DB_USER:postgres}
        password: ${TOKEN_STORE_DB_PASSWORD:postgres}
        testOnBorrow: ${TOKEN_STORE_TEST_ON_BORROW:true}
        testWhileIdle: ${TOKEN_STORE_TEST_WHILE_IDLE:true}
        validationQuery: /* Perry token store healthcheck */select 1 for read only
        logValidationErrors: ${TOKEN_STORE_LOG_VALIDATION_ERRORS:false}
        tomcat:
          # Number of ms to wait before throwing an exception if no connection is available.
          max-wait: 10000
          # Maximum number of active connections that can be allocated from this pool at the same time.
          max-active: 10
      jpa:
        database: POSTGRESQL
        show_sql: true
        hibernate:
          ddl-auto: none
        properties:
          hibernate.cache.use_query_cache: false
          hibernate.current_session_context_class : org.springframework.orm.hibernate5.SpringSessionContext
          hibernate.dialect: org.hibernate.dialect.ProgressDialect
          hibernate.default_schema: ${TOKEN_STORE_SCHEMA:perry}
          hibernate.connection.isolation: 1
    serviceProviders:
      default:
        identityMapping: config/dev.groovy
    users: ${USERS:}
    whiteList: ${WHITE_LIST:*}
    homePageUrl: ${HOME_PAGE_URL:/}
    showErrors: ${SHOW_ERRORS:true}
    tokenRecordTimeout: ${TOKEN_RECORD_TIMEOUT:240} # minutes
    liquibase:
      schema:
        change-log: classpath:/liquibase/perry_schema.xml
        default-schema: public
      structure:
        change-log: classpath:/liquibase/perry_database_master.xml
        default-schema: perry
management:
  context-path: /manage
  port: ${ADMIN_PORT:9082}
  security:
    enabled: false
  ssl:
    enabled: false
  trace:
    http:
      enabled: false
  endpoints:
    enabled: false
    health:
      enabled: true
    info:
      enabled: false
    env:
      enabled: false
    configprops:
      enabled: false
server:
  context-path: ${CONTEXT_PATH:/perry}
  use-forward-headers: ${USE_FORWARD_HEADERS:true}
  port: ${HTTPS_PORT:8090}
  ssl:
    enabled: ${SSL_ENABLED:false}
    keyStoreType: JCEKS
    trustStoreType: JCEKS
    keyStore: ${KEYSTORE_PATH:config/enc.jceks}
    keyStorePassword: ${KEYSTORE_PASSWORD:test}
    keyPassword: ${KEYSTORE_KEY_PASSWORD:test}
  http:
    port: ${HTTP_PORT:8080}
  error:
    whitelabel:
      enabled: false
cognito:
  iamAccessKeyId: ${COGNITO_IAM_ACCESS_ID:}
  iamSecretKey: ${COGNITO_IAM_SECRET:}
  region: ${COGNITO_REGION:us-east-2}
  userpool: ${COGNITO_USERPOOL:us-east-2_Hp5BRwwOJ}
logging:
  file: ${LOG_FILE:perry-log.txt}
  pattern:
    console: "%d %-5level [%thread] [%X{REQUEST_ID}] %logger [%X{USER_ID}] : %msg%n"
    file: "%d %-5level [%thread] [%X{REQUEST_ID}] %logger [%X{USER_ID}] : %msg%n"
  level:
    org:
      springframework:
        web: ${LOG_LEVEL:DEBUG}
        security: ${LOG_LEVEL:DEBUG}
      hibernate: ${LOG_LEVEL:DEBUG}
search:
  doraUrl: ${DORA_URL:https://dora.preint.cwds.io}
  doraBasicAuthUser: ${DORA_BASIC_AUTH_USER:perry}
  doraBasicAuthPass: ${DORA_BASIC_AUTH_PASSWORD:}
  usersIndex:
    name: ${ES_USER_INDEX:users}
    type: ${ES_USER_TYPE:user}
  auditIndex:
    name: ${ES_AUDIT_INDEX:auditevents}
    type: ${ES_AUDIT_TYPE:auditevent}
